
/*! calendar-jquery v1.0.4 | (c) Capricorncd | https://github.com/capricorncd/calendar-pirce-jquery */
"use strict";
!function ($) {
    function CalendarTime(t) {
        t.el || t.error && t.error({ code: 1, msg: CODES[1] }),
        this.calendar = $(t.el),
        this.settingWindow = createSettingWindow(),
        this.opts = $.extend({}, DEFAULTS, t),
        this.init()
    }
    var formatNumber = function (t) {
        return (t = t.toString())[1] ? t : "0" + t
    },
    toNumber = function (t) {
        return t = parseInt(t),
                isNaN(t) ? 0 : t
    },
    isValid = function (t) {
        return !!/^(\d{4})[-\/\.](\d{1,2})[-\/\.](\d{1,2})/.test(t) && RegExp.$1 + "/" + formatNumber(RegExp.$2) + "/" + formatNumber(RegExp.$3)
    },
    formatDate = function (t, e) {
        /(y+)/i.test(e) && (e = e.replace(RegExp.$1, (t.getFullYear() + "").substr(4 - RegExp.$1.length)));
        var a = {
            "M+": t.getMonth() + 1,
            "d+": t.getDate(),
            "h+": t.getHours(),
            "m+": t.getMinutes(),
            "s+": t.getSeconds()
        };
        for (var r in a)
            if (new RegExp("(" + r + ")").test(e))
            {
                var n = a[r] + ""; e = e.replace(RegExp.$1, 1 === RegExp.$1.length ? n : formatNumber(n))
            }
        return e
    },
    createSettingWindow = function () {
        var t = document.createElement("div");
        return t.className = "capricorncd-date-detailed-settings",
               t.style.display = "none",
               $(t)
    },
   
    TODAY = new Date,
    today = formatDate(TODAY, "yyyy-MM-dd"),
    ONE_DAY_MSEC = 864e5,
    tomorrow = formatDate(new Date(Date.parse(TODAY) + ONE_DAY_MSEC), "yyyy-MM-dd"),
    DEFAULTS = {
        data: [],
        tmonth: formatDate(TODAY, "yyyy/MM"),
        startDate: formatDate(TODAY, "yyyy/MM/dd"),
        Name:"",
        endDate: null,
        cancel: function () { },
        callback: function () { },
        reset: function () { console.log("reset completed!") },
        error: function () { },
        hideFooterButton: !1,
        style: { bgColor: "#fff" }
    },
    fn = CalendarTime.prototype;
    fn._formatThisMonth = function (t) {
        var e = null;
        return (e = /^(\d{4})[-\.\/](\d{1,2})/.test(t) ? this.dateToObject(RegExp.$1 + "/" + RegExp.$2) : this.dateToObject(formatDate(TODAY, "yyyy/MM"))) <= this.endDate && e >= this.startDate ? e : this.dateToObject(formatDate(this.startDate, "yyyy/MM"))
    },
    fn.init = function () {
        this.createStyleCode(),
        this.startDate = this._getStartDate(),
        this.endDate = this._getEndDate(),
        this.data = this._getOptionsData(),
        this.tmonth = this._formatThisMonth(this.opts.tmonth),
        this.initSettingWindow(),
        this.createCalendar(),
        this.handleClickEvent()
    },
    fn._prevMonth = function () {
        var t = toNumber(formatDate(this.opts.tmonth, "yyyy")),
            e = toNumber(formatDate(this.opts.tmonth, "MM"));
        this.opts.tmonth = (1 === e ? this.dateToObject(t - 1 + "/12") : this.dateToObject(t + "/" + (e - 1))),
        this.createCalendar()
    },
    fn._nextMonth = function () {
        var t = toNumber(formatDate(this.opts.tmonth, "yyyy")),
            e = toNumber(formatDate(this.opts.tmonth, "MM"));
        this.opts.tmonth = (12 === e ? this.dateToObject(t + 1 + "/01") : this.dateToObject(t + "/" + (e + 1))),
        this.createCalendar()
    },
    fn._getStartDate = function () {
        var t = this.dateToObject(this.opts.startDate);
        return t && t >= TODAY ? t : t
    },
    fn._getEndDate = function () {
        var t = this.opts.endDate,
            e = null,
            a = null,
            r = null;
        return /^(\d{4})[-\.\/](\d{1,2})/.test(t) && (e = RegExp.$1, a = toNumber(RegExp.$2)),
            e && a || (e = toNumber(formatDate(TODAY, "yyyy")) + 1,
            a = toNumber(formatDate(TODAY, "MM"))),
            r = /^\d{4}[-\.\/]\d{1,2}[-\.\/](\d{1,2})/.test(t) ? RegExp.$1 : new Date(Date.parse(new Date(e, a)) - ONE_DAY_MSEC).getDate(), this.dateToObject(e + "/" + a + "/" + r)
    },
    fn.dateToObject = function (t) {
        var e = "";
        return /(\d{4})[-\/\.](\d{1,2})[-\/\.]?/.test(t) && (e += RegExp.$1 + "/" + RegExp.$2),
            /[-\/\.]\d{1,2}[-\/\.](\d{1,2})/.test(t) ? e += "/" + RegExp.$1 : e += "/01", /\d{4}\/\d{1,2}\/\d{1,2}/.test(e) ? new Date(e) : (this.opts.error({ code: 2, msg: CODES[2].replace("{{text}}", t) }), !1)
    },
    fn.createCalendar = function () {
        var t = !0,
            e = !0,
            a = formatDate(this.opts.tmonth, "yyyyMM");
        //formatDate(this.startDate, "yyyyMM") >= a && (t = !1),
        //formatDate(this.endDate, "yyyyMM") <= a && (e = !1);
        //alert(formatDate(this.startDate, "yyyyMM") >= a && (t = !1))
        //alert(formatDate(this.endDate, "yyyyMM") <= a && (e = !1))
        var r = "";
        r += '<div class="capricorncd-calendar-container">',
        r += '\t<span style="background-color:#0000">姓名：' + this.opts.Name + '</span>'
        r += '\t<div class="calendar-head-wrapper" >',
        t && (r += '<a class="prev-month" title="上一月"></a>'),
        r += '<label class="calendar-month-title" >' + formatDate(this.opts.tmonth, "yyyy年MM月") + '</label>'
        r += '<a class="next-month" title="下一月"></a>',
        r += "\t</div>",
        r += '\t<div class="calendar-table-wrapper">',
        r += '\t<table cellpadding="4" cellspacing="0">',
        r += '\t\t<thead><tr class="week"><th class="weekend">日</th><th>一</th><th>二</th><th>三</th><th>四</th><th>五</th><th class="weekend">六</th></tr></thead>',
        r += "\t\t<tbody>" + this._createTbody() + "</tbody>",
        r += "\t</table>",
        r += "</div>", this.opts.hideFooterButton || (
        r += '<div class="calendar-foot-wrapper">',
        r += "</div>"),
        r += "</div>",
        r += "<div><label style='color: blue'>√</label>：多笔打卡记录</div>",
        r += "<div><label style='color: red'>√</label>：单笔打卡记录</div>",
        this.calendar.html(r),
        this.renderDataToTalbe
    },
    fn._createTbody = function () {
        var Applicant = this.opts.data[0]["LRD_Applicant"];
        for (
            var t = this._getMonthDays(),     //当月最大天数
            //这个月的第一天是星期几
            e = new Date(formatDate(this.opts.tmonth, "yyyy"), formatDate(this.opts.tmonth, "MM") - 1, 1).getDay(),
            // 日历中显示日期
            a = 0,
            // tr 行数
            r = Math.ceil((t + e) / 7),
            n = "", o = "",
            c = formatDate(this.startDate, "yyyy-MM-dd"),
            d = formatDate(this.endDate, "yyyy-MM-dd"),
            i = 0;
            i < r; i++) {
            o += "<tr>";
            for (var l = 1; l <= 7; l++)
                (a = 7 * i + l - e) > 0 && a <= t ? (n = formatDate(this.opts.tmonth, "yyyy-MM-") + formatNumber(a),
                    today == n && (a = "今天"),
                    tomorrow == n && (a = "明天"),
                    o +=
                    n >= c && n <= d ? '<td class="valid-hook" data-name="' + Applicant + '" data-week="' + (l - 1) + '" data-id="' + n + '"><b>'
                    + a 
                    + this._InputGroup(n) 
                    + '</b><div class="data-hook"></div></td>' : '<td class="disabled"><b>' +
                    a + "</b></td>") : o += "<td>&nbsp;</td>"; o += "</tr>"
        }
        return o
    },
    fn.initSettingWindow = function () {
        var t = "";
        t += '<div class="cddsw-container">',
        t += '<div class="cddsw-head-wrapper">',
        t += '<div class="cddsw-title">0000-00-00</div>',
        t += '<a class="cddsw-close"><i></i></a>',
        t += '</div><div id = "info" class = "width:700px;height:600px"></div>',
        //t += this._createDaySetupInputGroup(),
        t += '<div class="cddsw-foot-wrapper">',
        t += '<button class="btn-cancel">关闭</button>',
        t += "</div>",
        t += "</div>",
        
        this.settingWindow.html(t),
        $("body").append(this.settingWindow)
    },
     fn._createDaySetupInputGroup = function () {
         for (var t = "",
                  e = this.opts.config,
                  a = 0; a < e.length; a++) {
             var r = e[a];
             t += "<li>",
             t += " <label>" + r.name + "</label>",
             t += '<input name="' + r.key + '" type="text">',
             t += "</li>"
         } return t
     },
    fn._InputGroup = function (n) {
        for (var t = "",m="", e = this.opts.data, a = 0; a < e.length; a++)
        {
            var r = e[a];
            if (formatDate(new Date(r["StartTime"]), "yyyy-MM-dd") == n && r["type"] == "考勤")
            {
                if (r["Num"] > 1) {
                    m += "\t<div>",
                    m += "<label style='color: blue'>" + '√' + "</label>",
                    m += "</<div>"
                }
                else {
                    m += "\t<div>",
                    m += "<label style='color: red'>" + '√' + "</label>",
                    m += "</<div>"
                }
                
            }
            if (formatDate(new Date(r["StartTime"]), "yyyy-MM-dd") == n && r["type"] != "考勤")
            {
                t += "\t<div>",
                t += "<label>" + '类型:' + "</label>",
                t += "<label>" + r["type"] + "</label>",
                t += "</<div>"
            }
        }
        t = m + t;
        return t
    },
    /**
   * 渲染数据到表格
   */
    fn.renderDataToTalbe = function () {
        var t = this, e = '', a = "";
        this.calendar.find(".valid-hook").each(function () {
            $(this).data("data", JSON.stringify(e))
        })
     },
 
    fn._getDateData = function (t) {
        for (var e = this.data, a = 0; a < e.length; a++)
            if (t == e[a].date)
                return e[a];
            else {
                return null;
            }
    },
    fn._getMonthDays = function () {
        var t = this.opts.tmonth,
            e = formatDate(t, "yyyy"),
            a = formatDate(t, "MM");
        return 12 == a ? 31 : new Date(Date.parse(new Date(e, a, 1)) - ONE_DAY_MSEC).getDate()
    },
    /**
  * 创建日期显示模板
  * @returns {string}
  * @private
  */
    fn.dayComplate = function () {
        var t = this.opts.show, e = "";
        if (t && t instanceof Array)
        for (var a = 0; a < t.length; a++)
        {
            var r = t[a];
            e += "<p>" + r.name + "{" + r.key + "}</p>"
        }
        return e
    },
  
 /* 按钮点击事件处理
 */
    fn.handleClickEvent = function () {
        var t = this;
        this.calendar.on("click", ".prev-month", function () {
            t._prevMonth()
        }),
        this.calendar.on("click", ".next-month", function () {
            t._nextMonth()
        }),
        this.calendar.on("click", ".valid-hook", function () {
            var e = $(this).data("id"),
                a = $(this).data("name"),
                StartTime1 = formatDate(new Date(Date.parse(e) + ONE_DAY_MSEC), "yyyy-MM-dd"),
                StartTime2 = e,
                Applicant = a;
            $.ajax({
                url: "/Portal/Ajax/GetSirio2015.ashx?method=GetLrdExrInfo",
                type: "post",
                async: false,
                data: { Applicant: Applicant, StartTime1: StartTime1, StartTime2: StartTime2 },
                success: function (data) {
                    var list = JSON.parse(data);
                    var html = "<tr><th width='50px'>员工号</th><th width='50px'>姓名</th><th width='50px'>类型</th><th width='80px'>请假类型</th><th width='100px'>开始时间</th><th width='100px'>结束时间</th><th width='40px'>数量</th><th width='50px'>单位</th></tr>"
                    if (data != null && data != undefined && data != "" && data != '[]') {
                        for (var i = 0; i < list.length; i++) {
                            html += '<tr><th width="50px">' + list[i]["Applicant"] + '</th><th width="50px">' + list[i]["Name"] + '</th><th width="60px">' + list[i]["type"]
                            html += '</th><th width="80px">' + list[i]["EnumValue"] + '</th><th width="100px">' + formatDate(new Date(list[i]["StartTime"]), "yyyy-MM-dd hh:mm:ss") + '</th><th width="100px">' + formatDate(new Date(list[i]["EndTime"]), "yyyy-MM-dd hh:mm:ss")
                            html += '</th><th width="40px">' + list[i]["perid"] + '</th><th width="50px">' + list[i]["um"] + '</th><tr>';
                        }
                        $("#info").html(html)
                        t.opts.everyday ? t.opts.everyday(a) : t.settingWindow.show()
                    }
                }
            });
            $(".cddsw-title").html(StartTime2)
        }),
        this.settingWindow.on("click", ".cddsw-close, .btn-cancel", function () {
            t.settingWindow.hide()
        })
    },
    fn._createDateRangeArr = function (t, e) {
        for (
            var a = [],
            r = Date.parse(this.dateToObject(t)),
            n = Date.parse(this.dateToObject(e)),
            o = Math.floor((n - r) / ONE_DAY_MSEC) + 1, c = 0; c < o; c++)
        {
            var d = new Date(r + ONE_DAY_MSEC * c); a.push(formatDate(d, "yyyy-MM-dd"))
        }
        return a
    },
    fn.handleSetDateRangeData = function (t, e) {
        var a = [],
            r = isValid(t),
            n = isValid(e);
        return r ? r < today ? (this.opts.error({ code: 5, msg: CODES[5] }), null) : n ? n < r ? (this.opts.error({ code: 7, msg: CODES[7] }), null) : (r == n ? a.push(formatDate(this.dateToObject(r), "yyyy-MM-dd")) : a = this._createDateRangeArr(r, n), a) : (this.opts.error({ code: 6, msg: CODES[6] }), null) : (this.opts.error({ code: 4, msg: CODES[4] }), null)
    },
    fn.handleSetWeekData = function (t, e) {
        var a = this,
            r = [];
        return $.each(e,
            function (e, n)
            {
                var o = a.dateToObject(n).getDay(); t.join(",").indexOf(o) > -1 && r.push(n)
            }),
            r
    },
  
   

    fn._updateThisData = function (t, e) {
        var a = this,
            r = !1,
            n = {};
        n.date = e || t.date,
        $.each(t, function (t, e)
        {
            "date" != t && (n[t] = e)
        }),
        $.each(this.data,
            function (t, e)
            {
                if (n.date === e.date) return r = !0, a.data[t] = n, !1
            }),
        r || this.data.push(n)
    },
    fn._getOptionsData = function () {
        var t = formatDate(this.startDate, "yyyy-MM-dd"),
            e = formatDate(this.endDate, "yyyy-MM-dd"),
            a = [];
        return $.each(this.opts.data,
            function (r, n) {
                //alert(JSON.stringify(n))
                //alert(n.StartTime)
                n.StartTime >= t && n.StartTime <= e && a.push(n)
            }),
            this.sort(this.rmRepeat(a, "StartTime"))
    },
    fn.createStyleCode = function () {
        var style = this.opts.style || {},
            count = 0;
        for (var key in style)
            if (++count > 0)
                break;
        if (count) {
            var defaultStyle =
                {
                    headerBgColor: "#098cc2",
                    headerTextColor: "#fff",
                    weekBgColor: "#098cc2",
                    weekTextColor: "#fff",
                    weekendBgColor: "#098cc2",
                    weekendTextColor: "#fff",
                    validDateTextColor: "#333",
                    validDateBgColor: "#fff",
                    validDateBorderColor: "#eee",
                    validDateHoverBgColor: "#098cc2",
                    validDateHoverTextColor: "#fff",
                    invalidDateTextColor: "#ccc",
                    invalidDateBgColor: "#fff",
                    invalidDateBorderColor: "#eee",
                    footerBgColor: "#fff",
                    resetBtnBgColor: "#77c351",
                    resetBtnTextColor: "#fff",
                    resetBtnHoverBgColor: "#55b526",
                    resetBtnHoverTextColor: "#fff",
                    confirmBtnBgColor: "#098cc2",
                    confirmBtnTextColor: "#fff",
                    confirmBtnHoverBgColor: "#00649a",
                    confirmBtnHoverTextColor: "#fff",
                    cancelBtnBgColor: "#fff",
                    cancelBtnBorderColor: "#bbb",
                    cancelBtnTextColor: "#999",
                    cancelBtnHoverBgColor: "#fff",
                    cancelBtnHoverBorderColor: "#bbb",
                    cancelBtnHoverTextColor: "#666"
                },
                concatStyle = $.extend({}, defaultStyle, this.opts.style),
                templateStyle = ".capricorncd-calendar-container .calendar-head-wrapper, .capricorncd-date-detailed-settings .cddsw-container .cddsw-head-wrapper{background-color: {headerBgColor}}.capricorncd-calendar-container .calendar-head-wrapper .calendar-month-title, .capricorncd-date-detailed-settings .cddsw-container .cddsw-head-wrapper .cddsw-title{color: {headerTextColor};}.capricorncd-calendar-container .calendar-table-wrapper table .week{background-color:{weekBgColor};color:{weekTextColor}};.capricorncd-calendar-container .calendar-table-wrapper table .week th.weekend{background-color:{weekendBgColor};color:{weekendTextColor}}.capricorncd-calendar-container .calendar-table-wrapper table td{color:{validDateTextColor};background-color:{validDateBgColor};border-bottom: 1px solid {validDateBorderColor};border-right: 1px solid {validDateBorderColor};}.capricorncd-calendar-container .calendar-table-wrapper table td.valid-hook:hover{background-color:{validDateHoverBgColor};}.capricorncd-calendar-container .calendar-table-wrapper table td.valid-hook:hover b, .capricorncd-calendar-container .calendar-table-wrapper table td.valid-hook:hover p{color: {validDateHoverTextColor}}.capricorncd-calendar-container .calendar-table-wrapper table td.disabled{color:{invalidDateTextColor};background-color:{invalidDateBgColor}; border-bottom: 1px solid {invalidDateBorderColor};border-right: 1px solid {invalidDateBorderColor};}.capricorncd-calendar-container .calendar-foot-wrapper, .capricorncd-date-detailed-settings .cddsw-foot-wrapper{background-color:{footerBgColor}}.capricorncd-calendar-container .calendar-foot-wrapper button.btn-reset{background-color: {resetBtnBgColor};border: 1px solid {resetBtnBgColor};color: {resetBtnTextColor}}.capricorncd-calendar-container .calendar-foot-wrapper button.btn-reset:hover{background-color: {resetBtnHoverBgColor};border: 1px solid {resetBtnHoverBgColor};color: {resetBtnHoverTextColor}}.capricorncd-calendar-container .calendar-foot-wrapper button.btn-confirm, .capricorncd-date-detailed-settings .cddsw-foot-wrapper button.btn-confirm {background-color: {confirmBtnBgColor};border: 1px solid {confirmBtnBgColor};color: {confirmBtnTextColor}}.capricorncd-calendar-container .calendar-foot-wrapper button.btn-confirm:hover, .capricorncd-date-detailed-settings .cddsw-foot-wrapper button.btn-confirm:hover {background-color: {confirmBtnHoverBgColor};border: 1px solid {confirmBtnHoverBgColor};color: {confirmBtnHoverTextColor}}.capricorncd-calendar-container .calendar-foot-wrapper button.btn-cancel, .capricorncd-date-detailed-settings .cddsw-foot-wrapper button.btn-cancel {background-color: {cancelBtnBgColor};color:{cancelBtnTextColor};border: 1px solid {cancelBtnBorderColor};}.capricorncd-calendar-container .calendar-foot-wrapper button.btn-cancel:hover, .capricorncd-date-detailed-settings .cddsw-foot-wrapper button.btn-cancel:hover {background-color: {cancelBtnHoverBgColor};border-color: {cancelBtnHoverBorderColor};color: {cancelBtnHoverTextColor}}",
                reg = null;
            for (var key in concatStyle)
                reg = eval("/{" + key + "}/g"),
                    templateStyle = templateStyle.replace(reg, concatStyle[key]);
            $("head").append("<style>" + templateStyle + "</style>")
        }
    },
    fn.sort = function (t) {
        if (!(t instanceof Array)) return this.opts.error({ code: 8, msg: CODES[8] }), t; if (t.length < 1) return t; for (var e = 0, a = null, r = 0; r < t.length; r++) { e = r; for (var n = r + 1; n < t.length; n++) t[n].date < t[e].date && (e = n, a = t[r], t.splice(r, 1, t[n]), t.splice(n, 1, a)) } return t
    },
    fn.rmRepeat = function (t, e) {
        for (var a = {}, r = [], n = 0; n < t.length; n++) { var o = t[n]; if (e) try { o = t[n][e] } catch (t) { } a[o] || (r.push(t[n]), a[o] = !0) } return r
    },
    $.extend({ CalendarTime: function (t) { new CalendarTime(t) } })
}(jQuery);